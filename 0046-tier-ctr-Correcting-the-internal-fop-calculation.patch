From ab3cfdcb747f20c092cc8db0d97e80e34f3a8cd4 Mon Sep 17 00:00:00 2001
From: Joseph Fernandes <josferna@redhat.com>
Date: Fri, 23 Oct 2015 12:27:32 +0530
Subject: [PATCH 46/67] tier/ctr: Correcting the internal fop calculation

Correcting the internal fop calculation method, as it had wrong logic.

Change-Id: I1deeae8b67dd967159853b494e89a3f46572c962
Signed-off-by: Joseph Fernandes <josferna@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/60169
Reviewed-by: Dan Lambright <dlambrig@redhat.com>
Tested-by: Dan Lambright <dlambrig@redhat.com>
---
 .../changetimerecorder/src/changetimerecorder.c    |    6 +-
 .../features/changetimerecorder/src/ctr-helper.h   |   41 ++++++++++++-------
 2 files changed, 29 insertions(+), 18 deletions(-)

diff --git a/xlators/features/changetimerecorder/src/changetimerecorder.c b/xlators/features/changetimerecorder/src/changetimerecorder.c
index 090e54c..fb33767 100644
--- a/xlators/features/changetimerecorder/src/changetimerecorder.c
+++ b/xlators/features/changetimerecorder/src/changetimerecorder.c
@@ -881,7 +881,7 @@ ctr_unlink (call_frame_t *frame, xlator_t *this,
                 GFDB_FOP_DENTRY_WRITE, GFDB_FOP_WDEL);
 
         /*Internal FOP*/
-        _inode_cx->is_internal_fop = CTR_IS_INTERNAL_FOP(frame, xdata);
+        _inode_cx->is_internal_fop = is_internal_fop (frame, xdata);
 
         /* If its a internal FOP and dht link file donot record*/
         if (_inode_cx->is_internal_fop &&
@@ -1219,7 +1219,7 @@ ctr_create (call_frame_t *frame, xlator_t *this,
                 GFDB_FOP_CREATE_WRITE, GFDB_FOP_WIND);
 
         /*Internal FOP*/
-        _inode_cx->is_internal_fop = CTR_IS_INTERNAL_FOP(frame, xdata);
+        _inode_cx->is_internal_fop = is_internal_fop (frame, xdata);
 
         /* If its a internal FOP and dht link file donot record*/
         if (_inode_cx->is_internal_fop &&
@@ -1299,7 +1299,7 @@ ctr_link (call_frame_t *frame, xlator_t *this,
                 GFDB_FOP_DENTRY_WRITE, GFDB_FOP_WIND);
 
         /*Internal FOP*/
-        _inode_cx->is_internal_fop = CTR_IS_INTERNAL_FOP(frame, xdata);
+        _inode_cx->is_internal_fop = is_internal_fop (frame, xdata);
 
         /* If its a internal FOP and dht link file donot record*/
         if (_inode_cx->is_internal_fop &&
diff --git a/xlators/features/changetimerecorder/src/ctr-helper.h b/xlators/features/changetimerecorder/src/ctr-helper.h
index 51dec44..e030414 100644
--- a/xlators/features/changetimerecorder/src/ctr-helper.h
+++ b/xlators/features/changetimerecorder/src/ctr-helper.h
@@ -287,23 +287,34 @@ do {\
  * Internal fop
  *
  * */
-#define CTR_IS_INTERNAL_FOP(frame, dict)\
-        (AFR_SELF_HEAL_FOP (frame) \
-        || (REBALANCE_FOP (frame) && dict && \
-            !dict_get (dict, CTR_ATTACH_TIER_LOOKUP)) \
-        || (TIER_REBALANCE_FOP (frame) && dict && \
-           !dict_get (dict, CTR_ATTACH_TIER_LOOKUP)) \
-        || (dict && \
-            dict_get (dict, GLUSTERFS_INTERNAL_FOP_KEY)))
+static inline
+gf_boolean_t is_internal_fop (call_frame_t *frame,
+                              dict_t       *xdata)
+{
+        gf_boolean_t ret = _gf_false;
+
+        GF_ASSERT(frame);
+        GF_ASSERT(frame->root);
+
+        if (AFR_SELF_HEAL_FOP (frame)) {
+                ret = _gf_true;
+        }
+        if (REBALANCE_FOP (frame) || TIER_REBALANCE_FOP (frame)) {
+                ret = _gf_true;
+                if (xdata && dict_get (xdata, CTR_ATTACH_TIER_LOOKUP)) {
+                        ret = _gf_false;
+                }
+        }
+        if (xdata && dict_get (xdata, GLUSTERFS_INTERNAL_FOP_KEY)) {
+                ret = _gf_true;
+        }
+
+        return ret;
+}
 
-/**
- * ignore internal fops for all clients except AFR self-heal daemon
- */
 #define CTR_IF_INTERNAL_FOP_THEN_GOTO(frame, dict, label)\
 do {\
-        GF_ASSERT(frame);\
-        GF_ASSERT(frame->root);\
-        if (CTR_IS_INTERNAL_FOP(frame, dict)) \
+        if (is_internal_fop (frame, dict)) \
                         goto label; \
 } while (0)
 
-- 
1.7.1

