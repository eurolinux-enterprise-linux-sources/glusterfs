From f44b80280817966c1ee1e0cab323820841836a03 Mon Sep 17 00:00:00 2001
From: Ravishankar N <ravishankar@redhat.com>
Date: Wed, 9 Dec 2015 12:56:50 +0530
Subject: [PATCH 176/178] glusterd: add pending_node only if hxlator_count is valid

Patch in master:http://review.gluster.org/#/c/12843/
Patch in release-3.7: http://review.gluster.org/#/c/12905/

Problem:
To perform GLUSTERD_BRICK_XLATOR_OP, the rpc requires number of  xlators (n)
the op needs to be performed on and the xlator names are populated in
dictionary with xl-0, xl-1...  xl-n-1 as keys. When Volume heal full is
executed, for each replica group, glustershd on the local node may or may not be
selected to perform heal by glusterd.  XLATOR_OP rpc should be sent to the shd
running on the same node by glusterd only when glustershd on that node is
selected at  least once. This bug occurs when glusterd sends the rpc to local
glustershd even when it is not selected for any of the replica groups.

Fix:
Don't send the rpc to local glustershd when it is not selected even once.

Change-Id: I81e1c077ceb2cb86709b9258bdad1c7acf2fafc7
BUG: 1288988
Signed-off-by: Ravishankar N <ravishankar@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/63367
Reviewed-by: Atin Mukherjee <amukherj@redhat.com>
Tested-by: Atin Mukherjee <amukherj@redhat.com>
---
 xlators/mgmt/glusterd/src/glusterd-op-sm.c |   24 +++++++++++-------------
 1 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/xlators/mgmt/glusterd/src/glusterd-op-sm.c b/xlators/mgmt/glusterd/src/glusterd-op-sm.c
index e03d1ca..4ab91ef 100644
--- a/xlators/mgmt/glusterd/src/glusterd-op-sm.c
+++ b/xlators/mgmt/glusterd/src/glusterd-op-sm.c
@@ -6516,18 +6516,6 @@ glusterd_bricks_select_heal_volume (dict_t *dict, char **op_errstr,
                         goto out;
         }
 
-        pending_node = GF_CALLOC (1, sizeof (*pending_node),
-                                  gf_gld_mt_pending_node_t);
-        if (!pending_node) {
-                ret = -1;
-                goto out;
-        } else {
-                pending_node->node = &(priv->shd_svc);
-                pending_node->type = GD_NODE_SHD;
-                cds_list_add_tail (&pending_node->list, selected);
-                pending_node = NULL;
-        }
-
         if (!hxlator_count)
                 goto out;
         if (hxlator_count == -1) {
@@ -6541,7 +6529,17 @@ glusterd_bricks_select_heal_volume (dict_t *dict, char **op_errstr,
         ret = dict_set_int32 (dict, "count", hxlator_count);
         if (ret)
                 goto out;
-
+        pending_node = GF_CALLOC (1, sizeof (*pending_node),
+                                  gf_gld_mt_pending_node_t);
+        if (!pending_node) {
+                ret = -1;
+                goto out;
+        } else {
+                pending_node->node = &(priv->shd_svc);
+                pending_node->type = GD_NODE_SHD;
+                cds_list_add_tail (&pending_node->list, selected);
+                pending_node = NULL;
+        }
 
 out:
         gf_msg_debug (THIS->name, 0, "Returning ret %d", ret);
-- 
1.7.1

