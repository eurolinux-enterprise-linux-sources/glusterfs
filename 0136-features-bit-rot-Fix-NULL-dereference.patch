From 1d19bf30822682bd4fda86a6e32e3e8dcc81a7da Mon Sep 17 00:00:00 2001
From: Pranith Kumar K <pkarampu@redhat.com>
Date: Thu, 26 Nov 2015 09:58:39 +0530
Subject: [PATCH 136/138] features/bit-rot: Fix NULL dereference

Problem:
By the time br_stub_worker is accessing this->private in it's
thread, 'init' may not have set 'this->private = priv'. This
leads to NULL dereference leading to brick crash.

Fix:
Set this->private before launching these threads.

 >Change-Id: Ic797eb195fdd0c70d19f28d0b97bc0181fd3dd2f
 >BUG: 1285616
 >Signed-off-by: Pranith Kumar K <pkarampu@redhat.com>
 >Reviewed-on: http://review.gluster.org/12754
 >Tested-by: Gluster Build System <jenkins@build.gluster.com>
 >Tested-by: NetBSD Build System <jenkins@build.gluster.org>
 >Reviewed-by: Venky Shankar <vshankar@redhat.com>
 >3.7-patch: http://review.gluster.org/12764

BUG: 1286058
Change-Id: Ie363c9d393b33c43c9e72a376224ee56faade480
Signed-off-by: Pranith Kumar K <pkarampu@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/62489
---
 xlators/features/bit-rot/src/stub/bit-rot-stub.c |   14 ++++++++++----
 1 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/xlators/features/bit-rot/src/stub/bit-rot-stub.c b/xlators/features/bit-rot/src/stub/bit-rot-stub.c
index 12ea611..39dddcd 100644
--- a/xlators/features/bit-rot/src/stub/bit-rot-stub.c
+++ b/xlators/features/bit-rot/src/stub/bit-rot-stub.c
@@ -159,7 +159,12 @@ init (xlator_t *this)
         pthread_cond_init (&priv->cond, NULL);
         INIT_LIST_HEAD (&priv->squeue);
 
-        ret = gf_thread_create (&priv->signth, NULL, br_stub_signth, priv);
+        /* Thread creations need 'this' to be passed so that THIS can be
+         * assigned inside the thread. So setting this->private here.
+         */
+        this->private = priv;
+
+        ret = gf_thread_create (&priv->signth, NULL, br_stub_signth, this);
         if (ret != 0)
                 goto cleanup_lock;
 
@@ -170,8 +175,6 @@ init (xlator_t *this)
                 goto cleanup_lock;
         }
 
-        this->private = priv;
-
         gf_msg_debug (this->name, 0, "bit-rot stub loaded");
 
         return 0;
@@ -183,6 +186,7 @@ init (xlator_t *this)
         mem_pool_destroy (priv->local_pool);
  free_priv:
         GF_FREE (priv);
+        this->private = NULL;
  error_return:
         return -1;
 }
@@ -763,9 +767,11 @@ br_stub_perform_objsign (call_frame_t *frame, xlator_t *this,
 void *
 br_stub_signth (void *arg)
 {
-        br_stub_private_t *priv = arg;
+        xlator_t *this = arg;
+        br_stub_private_t *priv = this->private;
         struct br_stub_signentry *sigstub = NULL;
 
+        THIS = this;
         while (1) {
                 pthread_mutex_lock (&priv->lock);
                 {
-- 
1.7.1

