From d057ab569e475e3d44d3d30ba84d40e139dad0e4 Mon Sep 17 00:00:00 2001
From: Mohammed Rafi KC <rkavunga@redhat.com>
Date: Tue, 12 Jan 2016 12:13:15 +0530
Subject: [PATCH 241/245] snapview-client: remove check for parent inode type

In lookup call back path, we are checking for parent inode
type to make sure parent inode was set properly, so that
next op on the inode can be successfuly completed.

More info can be found at bugid 1297311

Backport of>

>Change-Id: Ifb1b17f472f855f9b12088c3dd8328389d895e77
>BUG: 1297311
>Signed-off-by: Mohammed Rafi KC <rkavunga@redhat.com>
>Reviewed-on: http://review.gluster.org/13227
>Reviewed-by: Avra Sengupta <asengupt@redhat.com>
>Tested-by: NetBSD Build System <jenkins@build.gluster.org>
>Reviewed-by: Rajesh Joseph <rjoseph@redhat.com>

Change-Id: I526d9a85bf31354cd86a51939da5989c460d93c5
BUG: 1296048
Signed-off-by: Mohammed Rafi KC <rkavunga@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/65465
Reviewed-by: Dan Lambright <dlambrig@redhat.com>
Tested-by: Dan Lambright <dlambrig@redhat.com>
---
 .../features/snapview-client/src/snapview-client.c |   26 --------------------
 1 files changed, 0 insertions(+), 26 deletions(-)

diff --git a/xlators/features/snapview-client/src/snapview-client.c b/xlators/features/snapview-client/src/snapview-client.c
index e784ff6..127704c 100644
--- a/xlators/features/snapview-client/src/snapview-client.c
+++ b/xlators/features/snapview-client/src/snapview-client.c
@@ -269,11 +269,9 @@ svc_lookup_cbk (call_frame_t *frame, void *cookie, xlator_t *this,
                 struct iatt *buf, dict_t *xdata, struct iatt *postparent)
 {
         svc_local_t     *local       = NULL;
-        inode_t         *parent      = NULL;
         xlator_t        *subvolume   = NULL;
         gf_boolean_t     do_unwind   = _gf_true;
         int              inode_type  = -1;
-        int              parent_type = -1;
         int              ret         = -1;
 
         local = frame->local;
@@ -335,27 +333,6 @@ svc_lookup_cbk (call_frame_t *frame, void *cookie, xlator_t *this,
                 goto out;
         }
 
-        if (local->loc.parent)
-                parent = inode_ref (local->loc.parent);
-        else {
-                parent = inode_parent (inode, NULL, NULL);
-                if (!parent && !gf_uuid_is_null (local->loc.pargfid)) {
-                        parent = inode_find (inode->table,
-                                             local->loc.pargfid);
-                }
-        }
-
-        if (!__is_root_gfid (buf->ia_gfid) && parent) {
-                ret = svc_inode_ctx_get (this, parent, &parent_type);
-                if (ret < 0) {
-                        op_ret = -1;
-                        op_errno = EINVAL;
-                        gf_log (this->name, GF_LOG_WARNING,
-                                "Error fetching parent context");
-                        goto out;
-                }
-        }
-
         if (subvolume == FIRST_CHILD (this))
                 inode_type = NORMAL_INODE;
         else
@@ -372,9 +349,6 @@ out:
                                   xdata, postparent);
         }
 
-        if (parent)
-                inode_unref (parent);
-
         return 0;
 }
 
-- 
1.7.1

