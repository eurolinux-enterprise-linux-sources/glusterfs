From 13d3b4a88c44f1f121c1d38244b67af9e4fff3f2 Mon Sep 17 00:00:00 2001
From: Mohammed Rafi KC <rkavunga@redhat.com>
Date: Mon, 21 Dec 2015 14:18:26 +0530
Subject: [PATCH 202/214] tier/unlink: open fd for special file for fdstat

DUring unlink of a file, dht request stat to see whether
the file is under migration or not. But in posix_unlink
currently we are opening for regular files. so the fdstat
for special files are failing with EBAD

Back port of>
>Change-Id: Ic0678e42e7701c3dffb91d98272e664b0fc646b5
>BUG: 1293256
>Signed-off-by: Mohammed Rafi KC <rkavunga@redhat.com>
>Reviewed-on: http://review.gluster.org/13034
>Reviewed-by: Raghavendra G <rgowdapp@redhat.com>
>Reviewed-by: Susant Palai <spalai@redhat.com>
>Tested-by: NetBSD Build System <jenkins@build.gluster.org>
>Reviewed-by: Dan Lambright <dlambrig@redhat.com>
>Tested-by: Dan Lambright <dlambrig@redhat.com>

Change-Id: I6337a933c9d52d43109362b984f3111d635c853b
BUG: 1293237
Signed-off-by: Mohammed Rafi KC <rkavunga@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/64303
Reviewed-by: Dan Lambright <dlambrig@redhat.com>
Tested-by: Dan Lambright <dlambrig@redhat.com>
---
 xlators/storage/posix/src/posix.c |   21 ++++++++++-----------
 1 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/xlators/storage/posix/src/posix.c b/xlators/storage/posix/src/posix.c
index a5da7c9..12d0c5c 100644
--- a/xlators/storage/posix/src/posix.c
+++ b/xlators/storage/posix/src/posix.c
@@ -1740,17 +1740,16 @@ posix_unlink (call_frame_t *frame, xlator_t *this,
                 fdstat_requested = 1;
         }
 
-        if (priv->background_unlink || fdstat_requested) {
-                if (IA_ISREG (loc->inode->ia_type)) {
-                        fd = open (real_path, O_RDONLY);
-                        if (fd == -1) {
-                                op_ret = -1;
-                                op_errno = errno;
-                                gf_msg (this->name, GF_LOG_ERROR, errno,
-                                        P_MSG_OPEN_FAILED,
-                                        "open of %s failed", real_path);
-                                goto out;
-                        }
+        if (fdstat_requested ||
+            (priv->background_unlink && IA_ISREG (loc->inode->ia_type))) {
+                fd = open (real_path, O_RDONLY);
+                if (fd == -1) {
+                        op_ret = -1;
+                        op_errno = errno;
+                        gf_msg (this->name, GF_LOG_ERROR, errno,
+                                P_MSG_OPEN_FAILED,
+                                "open of %s failed", real_path);
+                        goto out;
                 }
         }
 
-- 
1.7.1

