From 1a5ce316c140e6a212ca138d411456dc4a91763a Mon Sep 17 00:00:00 2001
From: Joseph Fernandes <josferna@redhat.com>
Date: Thu, 29 Oct 2015 12:06:57 +0530
Subject: [PATCH 85/98] tier/dht: Ignoring replica for migration counting

We used to count replica files for migration counting even though
they were ignore for migration as the replica brick didnt have
the ownership (as per the replication xlator either AFR/EC).
As a result the number of files migrated would show a wrong count,
i.e each replicated file would be counted 1 + number of replica.

This patch ignores such cases.

Backport of http://review.gluster.org/#/c/12453/

Change-Id: Ic0011fa6ad9bd99a9faddbaef3d7c48c8dcbfa5f
BUG: 1278389
Signed-off-by: Joseph Fernandes <josferna@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/60917
Reviewed-by: Dan Lambright <dlambrig@redhat.com>
Tested-by: Dan Lambright <dlambrig@redhat.com>
---
 xlators/cluster/dht/src/tier.c |   29 ++++++++++++++++++++++-------
 1 files changed, 22 insertions(+), 7 deletions(-)

diff --git a/xlators/cluster/dht/src/tier.c b/xlators/cluster/dht/src/tier.c
index 147a5c2..a189c96 100644
--- a/xlators/cluster/dht/src/tier.c
+++ b/xlators/cluster/dht/src/tier.c
@@ -104,14 +104,14 @@ tier_check_same_node (xlator_t *this, loc_t *loc, gf_defrag_info_t *defrag)
         }
 
         if (gf_uuid_parse (uuid_str, node_uuid)) {
-                gf_msg (this->name, GF_LOG_INFO, 0, DHT_MSG_LOG_TIER_ERROR,
+                gf_msg (this->name, GF_LOG_ERROR, 0, DHT_MSG_LOG_TIER_ERROR,
                         "uuid_parse failed for %s", loc->path);
                 goto out;
         }
 
         if (gf_uuid_compare (node_uuid, defrag->node_uuid)) {
-                gf_msg_trace (this->name, 0,
-                              "%s does not belong to this node", loc->path);
+                 gf_msg_trace (this->name, 0,
+                        "%s does not belong to this node", loc->path);
                 ret = 1;
                 goto out;
         }
@@ -258,6 +258,12 @@ tier_migrate_using_query_file (void *_args)
         loc_t loc                               = {0,};
         dict_t *migrate_data                    = NULL;
         inode_t *linked_inode                   = NULL;
+        /*
+         * per_file_status and per_link_status
+         *  0  : success
+         * -1 : failure
+         *  1  : ignore the status and dont count for migration
+         * */
         int per_file_status                     = 0;
         int per_link_status                     = 0;
         int total_status                        = 0;
@@ -497,9 +503,16 @@ tier_migrate_using_query_file (void *_args)
                                 loc.name);
 
                         ret = tier_check_same_node (this, &loc, defrag);
-                        if (ret) {
-                                if (ret < 0)
+                        if (ret != 0) {
+                                if (ret < 0) {
                                         per_link_status = -1;
+                                        goto abort;
+                                }
+                                ret = 0;
+                                /* By setting per_linl_status to 1 we are
+                                 * ignoring this status and will not be counting
+                                 * this file for migration */
+                                per_link_status = 1;
                                 goto abort;
                         }
 
@@ -572,14 +585,16 @@ abort:
                 }
                 per_file_status = per_link_status;
 per_file_out:
-                if (per_file_status) {
+                if (per_file_status < 0) {/* Failure */
                         pthread_mutex_lock (&dm_stat_mutex);
                         defrag->total_failures++;
                         pthread_mutex_unlock (&dm_stat_mutex);
-                } else {
+                } else if (per_file_status == 0) {/* Success */
                         pthread_mutex_lock (&dm_stat_mutex);
                         defrag->total_files++;
                         pthread_mutex_unlock (&dm_stat_mutex);
+                } else if (per_file_status == 1) {/* Ignore */
+                        per_file_status = 0;
                 }
                 total_status = total_status + per_file_status;
                 per_link_status = 0;
-- 
1.7.1

