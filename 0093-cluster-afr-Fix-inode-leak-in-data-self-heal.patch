From 6cf84c1d0686161737113ae297cb472fab93e27c Mon Sep 17 00:00:00 2001
From: Pranith Kumar K <pkarampu@redhat.com>
Date: Sat, 23 Apr 2016 05:30:08 +0530
Subject: [PATCH 093/104] cluster/afr: Fix inode-leak in data self-heal

Thanks to Olia-Kremmyda for finding the bug on github review,
https://github.com/gluster/glusterfs/commit/b8106d1127f034ffa88b5dd322c23a10e023b9b6

 >Change-Id: Ib8640ed0c331a635971d5d12052f0959c24f76a2
 >BUG: 1329773
 >Signed-off-by: Pranith Kumar K <pkarampu@redhat.com>
 >Reviewed-on: http://review.gluster.org/14052
 >Smoke: Gluster Build System <jenkins@build.gluster.com>
 >NetBSD-regression: NetBSD Build System <jenkins@build.gluster.org>
 >CentOS-regression: Gluster Build System <jenkins@build.gluster.com>
 >Reviewed-by: Ravishankar N <ravishankar@redhat.com>
 >Reviewed-by: Krutika Dhananjay <kdhananj@redhat.com>

BUG: 1330881
Change-Id: I9c3974cd231bed69e6babfba4d2ec42b3fe584f7
Signed-off-by: Pranith Kumar K <pkarampu@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/73101
Reviewed-by: Anuradha Talur <atalur@redhat.com>
Reviewed-by: Krutika Dhananjay <kdhananj@redhat.com>
Reviewed-by: Ravishankar Narayanankutty <ravishankar@redhat.com>
Tested-by: Ravishankar Narayanankutty <ravishankar@redhat.com>
---
 tests/basic/afr/heal-info.t                  |   10 +++++-----
 xlators/cluster/afr/src/afr-self-heal-data.c |    2 +-
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/tests/basic/afr/heal-info.t b/tests/basic/afr/heal-info.t
index b4da50b..46d6500 100644
--- a/tests/basic/afr/heal-info.t
+++ b/tests/basic/afr/heal-info.t
@@ -8,14 +8,14 @@
 cleanup;
 
 function heal_info_to_file {
-        while [ -f $M0/a.txt ]; do
+        while [ -f $M0/b.txt ]; do
                 $CLI volume heal $V0 info | grep -i number | grep -v 0 >> $1
         done
 }
 
 function write_and_del_file {
         dd of=$M0/a.txt if=/dev/zero bs=1024k count=100
-        rm -f $M0/a.txt
+        rm -f $M0/b.txt
 }
 
 TEST glusterd
@@ -24,13 +24,13 @@ TEST $CLI volume create $V0 replica 2 $H0:$B0/brick{0,1}
 TEST $CLI volume set $V0 locking-scheme granular
 TEST $CLI volume start $V0
 TEST $GFS --volfile-id=$V0 --volfile-server=$H0 $M0;
-TEST touch $M0/a.txt
+TEST touch $M0/a.txt $M0/b.txt
 write_and_del_file &
 touch $B0/f1 $B0/f2
 heal_info_to_file $B0/f1 &
 heal_info_to_file $B0/f2 &
 wait
-EXPECT "^0$" echo $(wc -l $B0/f1 | awk '{print $1}')
-EXPECT "^0$" echo $(wc -l $B0/f2 | awk '{print $1}')
+EXPECT "^$" cat $B0/f1
+EXPECT "^$" cat $B0/f2
 
 cleanup;
diff --git a/xlators/cluster/afr/src/afr-self-heal-data.c b/xlators/cluster/afr/src/afr-self-heal-data.c
index 67bb8e6..72f6b2a 100644
--- a/xlators/cluster/afr/src/afr-self-heal-data.c
+++ b/xlators/cluster/afr/src/afr-self-heal-data.c
@@ -814,7 +814,6 @@ afr_selfheal_data_open (xlator_t *this, inode_t *inode, fd_t **fd)
 	ret = syncop_open (this, &loc, O_RDWR|O_LARGEFILE, fd_tmp, NULL, NULL);
 	if (ret < 0) {
 		fd_unref (fd_tmp);
-                loc_wipe (&loc);
                 goto out;
 	} else {
 		fd_bind (fd_tmp);
@@ -822,6 +821,7 @@ afr_selfheal_data_open (xlator_t *this, inode_t *inode, fd_t **fd)
 
         *fd = fd_tmp;
 out:
+        loc_wipe (&loc);
 	return ret;
 }
 
-- 
1.7.1

