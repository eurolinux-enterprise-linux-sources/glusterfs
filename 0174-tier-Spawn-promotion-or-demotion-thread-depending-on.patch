From 1c7adf4f57812dac35912873ba626966dab40345 Mon Sep 17 00:00:00 2001
From: Joseph Fernandes <josferna@redhat.com>
Date: Tue, 8 Dec 2015 18:56:31 +0530
Subject: [PATCH 174/178] tier : Spawn promotion or demotion thread depending on local bricks

Spawn Promotion or Demotion depending if there are any Cold or Hot
bricks present localy.
IF the local HOT brick list is empty dont spawn demote thread.
IF the local COLD brick list is empty dont spawn promote thread.

Backport of http://review.gluster.org/12912

> Change-Id: I524730e59414dd156c78ec0bd7a3629212697e6e
> BUG: 1289578
> Signed-off-by: Joseph Fernandes <josferna@redhat.com>
> Reviewed-on: http://review.gluster.org/12912
> Tested-by: NetBSD Build System <jenkins@build.gluster.org>
> Reviewed-by: N Balachandran <nbalacha@redhat.com>
> Tested-by: Gluster Build System <jenkins@build.gluster.com>
> Reviewed-by: Dan Lambright <dlambrig@redhat.com>
> Tested-by: Dan Lambright <dlambrig@redhat.com>
Signed-off-by: Joseph Fernandes <josferna@redhat.com>

Change-Id: I7b04bcfef02ad89c211e0148e2cb8b5e058f4d5c
BUG: 1289071
Reviewed-on: https://code.engineering.redhat.com/gerrit/63393
Reviewed-by: Joseph Fernandes <josferna@redhat.com>
Tested-by: Joseph Fernandes <josferna@redhat.com>
---
 xlators/cluster/dht/src/tier.c |   51 ++++++++++++++++++++++-----------------
 1 files changed, 29 insertions(+), 22 deletions(-)

diff --git a/xlators/cluster/dht/src/tier.c b/xlators/cluster/dht/src/tier.c
index f176589..1713e75 100644
--- a/xlators/cluster/dht/src/tier.c
+++ b/xlators/cluster/dht/src/tier.c
@@ -1320,25 +1320,27 @@ clear_bricklist (struct list_head *brick_list)
 int
 tier_start (xlator_t *this, gf_defrag_info_t *defrag)
 {
-        struct list_head bricklist_hot = { 0 };
-        struct list_head bricklist_cold = { 0 };
-        dht_conf_t   *conf     = NULL;
-        gfdb_time_t  current_time;
-        int freq_promote = 0;
-        int freq_demote = 0;
-        promotion_args_t promotion_args = { 0 };
-        demotion_args_t demotion_args = { 0 };
-        int ret_promotion = 0;
-        int ret_demotion = 0;
-        int ret = 0;
+        struct list_head bricklist_hot          = { 0 };
+        struct list_head bricklist_cold         = { 0 };
+        gf_boolean_t is_hot_list_empty          = _gf_false;
+        gf_boolean_t is_cold_list_empty         = _gf_false;
+        dht_conf_t *conf                        = NULL;
+        gfdb_time_t  current_time               = { 0 };
+        int freq_promote                        = 0;
+        int freq_demote                         = 0;
+        promotion_args_t promotion_args         = { 0 };
+        demotion_args_t demotion_args           = { 0 };
+        int ret_promotion                       = 0;
+        int ret_demotion                        = 0;
+        int ret                                 = 0;
         pthread_t promote_thread;
         pthread_t demote_thread;
-        gf_boolean_t  is_promotion_triggered = _gf_false;
-        gf_boolean_t  is_demotion_triggered  = _gf_false;
-        xlator_t                *any         = NULL;
-        xlator_t                *xlator      = NULL;
-        gf_tier_conf_t    *tier_conf   = NULL;
-        loc_t      root_loc = { 0 };
+        gf_boolean_t  is_promotion_triggered    = _gf_false;
+        gf_boolean_t  is_demotion_triggered     = _gf_false;
+        xlator_t *any                           = NULL;
+        xlator_t *xlator                        = NULL;
+        gf_tier_conf_t *tier_conf               = NULL;
+        loc_t root_loc                          = { 0 };
 
         conf   = this->private;
 
@@ -1348,6 +1350,9 @@ tier_start (xlator_t *this, gf_defrag_info_t *defrag)
         tier_get_bricklist (conf->subvolumes[0], &bricklist_cold);
         tier_get_bricklist (conf->subvolumes[1], &bricklist_hot);
 
+        is_hot_list_empty = list_empty(&bricklist_hot);
+        is_cold_list_empty = list_empty(&bricklist_cold);
+
         gf_msg (this->name, GF_LOG_INFO, 0,
                 DHT_MSG_LOG_TIER_STATUS, "Begin run tier promote %d"
                         " demote %d", freq_promote, freq_demote);
@@ -1421,14 +1426,14 @@ tier_start (xlator_t *this, gf_defrag_info_t *defrag)
 
                 freq_demote = tier_get_freq_demote (tier_conf);
 
-                is_demotion_triggered = tier_check_demote (current_time,
-                                                           freq_demote);
+                is_demotion_triggered = (is_hot_list_empty) ? _gf_false :
+                        tier_check_demote (current_time, freq_demote);
 
                 freq_promote = tier_get_freq_promote(tier_conf);
 
-                is_promotion_triggered = tier_check_promote (tier_conf,
-                                                             current_time,
-                                                             freq_promote);
+                is_promotion_triggered = (is_cold_list_empty) ? _gf_false :
+                        tier_check_promote (tier_conf, current_time,
+                                            freq_promote);
 
                 /* If no promotion and no demotion is
                  * scheduled/triggered skip an iteration */
@@ -1446,6 +1451,7 @@ tier_start (xlator_t *this, gf_defrag_info_t *defrag)
                 ret_promotion = -1;
                 ret_demotion = -1;
 
+                /* Spawn demotion thread if demotion is triggered */
                 if (is_demotion_triggered) {
                         demotion_args.this = this;
                         demotion_args.brick_list = &bricklist_hot;
@@ -1462,6 +1468,7 @@ tier_start (xlator_t *this, gf_defrag_info_t *defrag)
                         }
                 }
 
+                /* Spawn promotion thread if promotion is triggered */
                 if (is_promotion_triggered) {
                         promotion_args.this = this;
                         promotion_args.brick_list = &bricklist_cold;
-- 
1.7.1

