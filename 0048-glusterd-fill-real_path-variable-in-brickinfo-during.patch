From 197f0019e59283929484e19fb7b9f061985fad4f Mon Sep 17 00:00:00 2001
From: Mohammed Rafi KC <rkavunga@redhat.com>
Date: Fri, 1 Apr 2016 23:10:51 +0530
Subject: [PATCH 48/80] glusterd: fill real_path variable in brickinfo during volume import

Backport of http://review.gluster.org/#/c/13890
            http://review.gluster.org/#/c/13914

Variable "real_path" in brick info was used to store absolute path
and using this we check the availability of the newly added bricks.

But we were not populating the variable when we import a volume
from peers. That caused to reset the real_path variable to zero,
which resulted in validation failure for all new brick creation.

Change-Id: I62be7bf452f0dcdf6aec3a4ec33c2e1fba2951ca
BUG: 1323119
Signed-off-by: Mohammed Rafi KC <rkavunga@redhat.com>
Reviewed-on: http://review.gluster.org/13890
Reviewed-by: Atin Mukherjee <amukherj@redhat.com>
Smoke: Gluster Build System <jenkins@build.gluster.com>
NetBSD-regression: NetBSD Build System <jenkins@build.gluster.org>
CentOS-regression: Gluster Build System <jenkins@build.gluster.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/71498
Reviewed-by: Rajesh Joseph <rjoseph@redhat.com>
Tested-by: Rajesh Joseph <rjoseph@redhat.com>
---
 .../bug-1323287-real_path-handshake-test.t         |   39 ++++++++++++++++++++
 xlators/mgmt/glusterd/src/glusterd-utils.c         |   15 ++++++++
 2 files changed, 54 insertions(+), 0 deletions(-)
 create mode 100644 tests/bugs/glusterd/bug-1323287-real_path-handshake-test.t

diff --git a/tests/bugs/glusterd/bug-1323287-real_path-handshake-test.t b/tests/bugs/glusterd/bug-1323287-real_path-handshake-test.t
new file mode 100644
index 0000000..12b722b
--- /dev/null
+++ b/tests/bugs/glusterd/bug-1323287-real_path-handshake-test.t
@@ -0,0 +1,39 @@
+#!/bin/bash
+
+. $(dirname $0)/../../include.rc
+. $(dirname $0)/../../cluster.rc
+. $(dirname $0)/../../volume.rc
+
+function volume_get_field()
+{
+     local vol=$1
+     local field=$2
+     $CLI_2 volume get $vol $field | tail -1 | awk '{print $2}'
+}
+
+cleanup;
+TEST launch_cluster 2;
+TEST $CLI_1 peer probe $H2;
+
+EXPECT_WITHIN $PROBE_TIMEOUT 1 peer_count
+
+TEST $CLI_1 volume create $V0 $H1:$B1/$V0  $H2:$B2/$V0
+EXPECT 'Created' cluster_volinfo_field 1 $V0 'Status';
+
+TEST $CLI_1 volume start $V0
+EXPECT 'Started' cluster_volinfo_field 1 $V0 'Status';
+
+#kill glusterd2 and do a volume set command to change the version
+kill_glusterd 2
+
+TEST $CLI_1 volume set $V0 performance.write-behind off
+TEST start_glusterd 2;
+
+EXPECT_WITHIN $PROBE_TIMEOUT 1 peer_count
+
+#Check for handshake completion.
+EXPECT_WITHIN $PROBE_TIMEOUT 'off' volume_get_field $V0 'write-behind'
+
+#During hanndshake, if we failed to populate real_path,
+#then volume create will fail.
+TEST $CLI_1 volume create $V1 $H1:$B1/$V1  $H2:$B2/$V1
diff --git a/xlators/mgmt/glusterd/src/glusterd-utils.c b/xlators/mgmt/glusterd/src/glusterd-utils.c
index 639404a..97b2e31 100644
--- a/xlators/mgmt/glusterd/src/glusterd-utils.c
+++ b/xlators/mgmt/glusterd/src/glusterd-utils.c
@@ -3029,6 +3029,7 @@ glusterd_import_new_brick (dict_t *peer_data, int32_t vol_count,
         char                    msg[2048] = {0};
         xlator_t                *this     = NULL;
         char                    *brick_uuid_str = NULL;
+        char                    abspath[PATH_MAX] = {0};
 
         this = THIS;
         GF_ASSERT (this);
@@ -3092,7 +3093,21 @@ glusterd_import_new_brick (dict_t *peer_data, int32_t vol_count,
         ret = dict_get_str (peer_data, key, &brick_uuid_str);
         if (ret)
                 goto out;
+
         gf_uuid_parse (brick_uuid_str, new_brickinfo->uuid);
+        if (!gf_uuid_compare(new_brickinfo->uuid, MY_UUID)) {
+                if (!realpath (new_brickinfo->path, abspath)) {
+                        gf_msg (this->name, GF_LOG_CRITICAL, errno,
+                                GD_MSG_BRICKINFO_CREATE_FAIL, "realpath() "
+                                "failed for brick %s. The underlying file "
+                                "system may be in bad state",
+                                new_brickinfo->path);
+                        ret = -1;
+                        goto out;
+                }
+                strncpy (new_brickinfo->real_path, abspath,
+                         strlen(abspath));
+        }
 
         *brickinfo = new_brickinfo;
 out:
-- 
1.7.1

