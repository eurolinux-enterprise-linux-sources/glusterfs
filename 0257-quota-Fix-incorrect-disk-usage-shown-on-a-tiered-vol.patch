From 6f00890041aeec62994d2cf41173e9e966ae0ca2 Mon Sep 17 00:00:00 2001
From: Manikandan Selvaganesh <mselvaga@redhat.com>
Date: Fri, 5 Feb 2016 12:17:22 +0530
Subject: [PATCH 257/258] quota: Fix incorrect disk usage shown on a tiered volume

        Backport of http://review.gluster.org/13363

When quota is enabled on a tiered volume, incorrect data usage is
shown, it is because, during the process of migrating files in tiering,
we are accounting both for the src file and dst file at some point. By the
time we make the srcfile as a T file, marker has already accounted the
contri and has updated it's parent and also we are not accounting for the
truncate operation done, which accounts to incorrect data usage even after
unlinking the file. The size can increase drastically with multiple promotes
and demotes since the contri keeps changing and the parent is being updated.

> Change-Id: Ie567228786713d7dc257ff374a69ad3be40f9e82
> BUG: 1304970
> Signed-off-by: Manikandan Selvaganesh <mselvaga@redhat.com>

Change-Id: Ic85044a4cee39f1ce8260443be0b25fddbbacbfe
BUG: 1304684
Signed-off-by: Manikandan Selvaganesh <mselvaga@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/67161
Tested-by: Vijaikumar Mallikarjuna <vmallika@redhat.com>
Reviewed-by: Vijaikumar Mallikarjuna <vmallika@redhat.com>
Reviewed-by: Raghavendra Gowdappa <rgowdapp@redhat.com>
---
 xlators/features/marker/src/marker.c |   27 +++++++++++++++++++++++----
 1 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/xlators/features/marker/src/marker.c b/xlators/features/marker/src/marker.c
index de5b623..38a3ad5 100644
--- a/xlators/features/marker/src/marker.c
+++ b/xlators/features/marker/src/marker.c
@@ -1733,8 +1733,23 @@ marker_truncate_cbk (call_frame_t *frame, void *cookie, xlator_t *this,
 
         priv = this->private;
 
-        if (priv->feature_enabled & GF_QUOTA)
-                mq_initiate_quota_txn (this, &local->loc, postbuf);
+        if (priv->feature_enabled & GF_QUOTA) {
+                /* DHT Rebalance process, at the end of migration will
+                 * first make the src file as a linkto file and then
+                 * truncate the file. By doing a truncate after making the
+                 * src file as linkto file, the contri which is already
+                 * accounted is left over.
+                 * So, we need to account for the linkto file when a truncate
+                 * happens, thereby updating the contri properly.
+                 * By passing NULL for postbuf, mq_prevalidate does not check
+                 * for linkto file.
+                 * Same happens with ftruncate as well.
+                 */
+                if (postbuf && IS_DHT_LINKFILE_MODE (postbuf))
+                        mq_initiate_quota_txn (this, &local->loc, NULL);
+                else
+                        mq_initiate_quota_txn (this, &local->loc, postbuf);
+        }
 
         if (priv->feature_enabled & GF_XTIME)
                 marker_xtime_update_marks (this, local);
@@ -1802,8 +1817,12 @@ marker_ftruncate_cbk (call_frame_t *frame, void *cookie, xlator_t *this,
 
         priv = this->private;
 
-        if (priv->feature_enabled & GF_QUOTA)
-                mq_initiate_quota_txn (this, &local->loc, postbuf);
+        if (priv->feature_enabled & GF_QUOTA) {
+                if (postbuf && IS_DHT_LINKFILE_MODE (postbuf))
+                        mq_initiate_quota_txn (this, &local->loc, NULL);
+                else
+                        mq_initiate_quota_txn (this, &local->loc, postbuf);
+        }
 
         if (priv->feature_enabled & GF_XTIME)
                 marker_xtime_update_marks (this, local);
-- 
1.7.1

