From eb496f627c7a1f607253c9b6dc5fd61fd1554f00 Mon Sep 17 00:00:00 2001
From: Gaurav Kumar Garg <garg.gaurav52@gmail.com>
Date: Tue, 11 Aug 2015 18:17:31 +0530
Subject: [PATCH 25/28] glusterd: probing a new node, which is part of another cluster should give error

This patch is backport of: http://review.gluster.org/11884

If user try to add node to extant cluster using "gluster peer probe \
<ip/hostname>" command then command is failing but its not giving
proper cause of failure.

This fix will take control of proper error message during peer probe
with already extant cluster.

  >> Change-Id: I4f993e78c0e1b3e061153b984ec5e9b70085aef5
  >> BUG: 1252448
  >> Signed-off-by: Gaurav Kumar Garg <ggarg@redhat.com>

Change-Id: I05dbece46d9e182c93809d6985a550e381d98565
BUG: 1237022
Signed-off-by: Gaurav Kumar Garg <ggarg@redhat.com>
Reviewed-on: https://code.engineering.redhat.com/gerrit/59446
Reviewed-by: Krishnan Parthasarathi <kparthas@redhat.com>
Tested-by: Krishnan Parthasarathi <kparthas@redhat.com>
---
 xlators/mgmt/glusterd/src/glusterd-handler.c |    8 +++++---
 1 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/xlators/mgmt/glusterd/src/glusterd-handler.c b/xlators/mgmt/glusterd/src/glusterd-handler.c
index 09b6151..b5c8c3b 100644
--- a/xlators/mgmt/glusterd/src/glusterd-handler.c
+++ b/xlators/mgmt/glusterd/src/glusterd-handler.c
@@ -4924,7 +4924,7 @@ glusterd_brick_rpc_notify (struct rpc_clnt *rpc, void *mydata,
 }
 
 int
-glusterd_friend_remove_notify (glusterd_peerctx_t *peerctx)
+glusterd_friend_remove_notify (glusterd_peerctx_t *peerctx, int32_t op_errno)
 {
         int                             ret = -1;
         glusterd_friend_sm_event_t      *new_event = NULL;
@@ -4960,7 +4960,7 @@ glusterd_friend_remove_notify (glusterd_peerctx_t *peerctx)
                         goto out;
                 }
 
-                glusterd_xfer_cli_probe_resp (req, -1, ENOTCONN, errstr,
+                glusterd_xfer_cli_probe_resp (req, -1, op_errno, errstr,
                                               peerinfo->hostname,
                                               peerinfo->port, dict);
 
@@ -4987,6 +4987,7 @@ __glusterd_peer_rpc_notify (struct rpc_clnt *rpc, void *mydata,
         xlator_t             *this        = NULL;
         glusterd_conf_t      *conf        = NULL;
         int                   ret         = 0;
+        int32_t               op_errno    = ENOTCONN;
         glusterd_peerinfo_t  *peerinfo    = NULL;
         glusterd_peerctx_t   *peerctx     = NULL;
         gf_boolean_t         quorum_action = _gf_false;
@@ -5079,6 +5080,7 @@ __glusterd_peer_rpc_notify (struct rpc_clnt *rpc, void *mydata,
                                 }
                         }
 
+                        op_errno = GF_PROBE_ANOTHER_CLUSTER;
                         ret = 0;
                 }
 
@@ -5093,7 +5095,7 @@ __glusterd_peer_rpc_notify (struct rpc_clnt *rpc, void *mydata,
                 *  fails, and notify cli. Happens only during probe.
                 */
                 if (peerinfo->state.state == GD_FRIEND_STATE_DEFAULT) {
-                        glusterd_friend_remove_notify (peerctx);
+                        glusterd_friend_remove_notify (peerctx, op_errno);
                         goto out;
                 }
 
-- 
1.7.1

