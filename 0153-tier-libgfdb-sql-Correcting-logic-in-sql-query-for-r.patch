From c744ec8ff0f4af9165eaaf5a4f198ca6c83cc7d3 Mon Sep 17 00:00:00 2001
From: Joseph Fernandes <josferna@redhat.com>
Date: Mon, 30 Nov 2015 16:51:35 +0530
Subject: [PATCH 153/162] tier/libgfdb/sql: Correcting logic in sql query for read

Correcting query in the  where clause

from "a & b | c"

to "a & (b | c)"

where "a" is the condition to join the gf_file_tb and gf_flink_tb
through gfids

"b" is the condition for the write heat
and "c" is the condition for read heat

Backport of http://review.gluster.org/#/c/12823/

> Change-Id: I99226d82b0efb68fbef3a40f02b215bb2b4370d6
> BUG: 1286656
> Signed-off-by: Joseph Fernandes <josferna@redhat.com>
> Signed-off-by: Dan Lambright <dlambrig@redhat.com>
Signed-off-by: Joseph Fernandes <josferna@redhat.com>

Change-Id: I0f965cd9909ac7b7856c69fb43ce0c823a6b8e49
BUG: 1286654
Signed-off-by: Dan Lambright <dlambrig@redhat.com>

Conflicts:
	tests/basic/tier/frequency-counters.t
Change-Id: I5f0f6a695d87ebdeaa36c245e2d3c07901d65950
Reviewed-on: https://code.engineering.redhat.com/gerrit/62832
Reviewed-by: Dan Lambright <dlambrig@redhat.com>
Tested-by: Dan Lambright <dlambrig@redhat.com>
Reviewed-by: Joseph Fernandes <josferna@redhat.com>
---
 libglusterfs/src/gfdb/gfdb_sqlite3.c  |   16 ++++++++--------
 tests/basic/tier/frequency-counters.t |    6 +++++-
 2 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/libglusterfs/src/gfdb/gfdb_sqlite3.c b/libglusterfs/src/gfdb/gfdb_sqlite3.c
index c4ce86d..4d46ff6 100644
--- a/libglusterfs/src/gfdb/gfdb_sqlite3.c
+++ b/libglusterfs/src/gfdb/gfdb_sqlite3.c
@@ -708,12 +708,12 @@ gf_sqlite3_find_recently_changed_files(void *db_conn,
 
         ret = gf_asprintf (&query_str, "%s AND"
                 /*First condition: For writes*/
-                "((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
+                "( ((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
                 GF_COL_TB_WMSEC ") >= ? )"
                 " OR "
                 /*Second condition: For reads*/
                 "((" GF_COL_TB_RWSEC " * " TOSTRING(GFDB_MICROSEC) " + "
-                GF_COL_TB_RWMSEC ") >= ?)", base_query_str);
+                GF_COL_TB_RWMSEC ") >= ?) )", base_query_str);
 
         if (ret < 0) {
                 gf_msg (GFDB_STR_SQLITE3, GF_LOG_ERROR, 0, LG_MSG_QUERY_FAILED,
@@ -804,12 +804,12 @@ gf_sqlite3_find_unchanged_for_time (void *db_conn,
 
         ret = gf_asprintf (&query_str, "%s AND "
                 /*First condition: For writes*/
-                "((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
+                "( ((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
                 GF_COL_TB_WMSEC ") <= ? )"
                 " AND "
                 /*Second condition: For reads*/
                 "((" GF_COL_TB_RWSEC " * " TOSTRING(GFDB_MICROSEC) " + "
-                GF_COL_TB_RWMSEC ") <= ?)", base_query_str);
+                GF_COL_TB_RWMSEC ") <= ?) )", base_query_str);
 
         if (ret < 0) {
                 gf_msg (GFDB_STR_SQLITE3, GF_LOG_ERROR, 0, LG_MSG_QUERY_FAILED,
@@ -909,14 +909,14 @@ gf_sqlite3_find_recently_changed_files_freq (void *db_conn,
         }
         ret = gf_asprintf (&query_str, "%s AND "
                 /*First condition: For Writes*/
-                "( ((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
+                "( ( ((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
                 GF_COL_TB_WMSEC ") >= ? )"
                 " AND "" (" GF_COL_TB_WFC " >= ? ) )"
                 " OR "
                 /*Second condition: For Reads */
                 "( ((" GF_COL_TB_RWSEC " * " TOSTRING(GFDB_MICROSEC) " + "
                 GF_COL_TB_RWMSEC ") >= ?)"
-                " AND "" (" GF_COL_TB_RFC " >= ? ) )", base_query_str);
+                " AND "" (" GF_COL_TB_RFC " >= ? ) ) )", base_query_str);
 
         if (ret < 0) {
                 gf_msg (GFDB_STR_SQLITE3, GF_LOG_ERROR, 0, LG_MSG_QUERY_FAILED,
@@ -1054,7 +1054,7 @@ gf_sqlite3_find_unchanged_for_time_freq (void *db_conn,
                  * OR
                  * File that have write wind time greater than for_time,
                  * but write_frequency less than freq_write_cnt*/
-                "( ((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
+                "( ( ((" GF_COL_TB_WSEC " * " TOSTRING(GFDB_MICROSEC) " + "
                 GF_COL_TB_WMSEC ") < ? )"
                 " OR "
                 "( (" GF_COL_TB_WFC " < ? ) AND"
@@ -1071,7 +1071,7 @@ gf_sqlite3_find_unchanged_for_time_freq (void *db_conn,
                 " OR "
                 "( (" GF_COL_TB_RFC " < ? ) AND"
                 "((" GF_COL_TB_RWSEC " * " TOSTRING(GFDB_MICROSEC) " + "
-                GF_COL_TB_RWMSEC ") >= ? ) ) )", base_query_str);
+                GF_COL_TB_RWMSEC ") >= ? ) ) ) )", base_query_str);
 
         if (ret < 0) {
                 gf_msg (GFDB_STR_SQLITE3, GF_LOG_ERROR, 0, LG_MSG_QUERY_FAILED,
diff --git a/tests/basic/tier/frequency-counters.t b/tests/basic/tier/frequency-counters.t
index 707b8b4..f3a5fa3 100644
--- a/tests/basic/tier/frequency-counters.t
+++ b/tests/basic/tier/frequency-counters.t
@@ -40,7 +40,6 @@ TEST glusterd
 #Create and start a tiered volume
 create_dist_vol $NUM_BRICKS
 
-$CLI volume set $V0 diagnostics.client-log-level DEBUG
 # Mount FUSE
 TEST glusterfs -s $H0 --volfile-id $V0 $M0
 
@@ -69,6 +68,11 @@ echo "hi" >> file2
 drop_cache $M0
 
 EXPECT_WITHIN $PROMOTE_FREQ "0" check_counters 1 0
+echo "hi" >> file2
+drop_cache $M0
+cat file1
+
+EXPECT_WITHIN $PROMOTE_FREQ "0" check_counters 1 0
 
 TEST ! $CLI volume set $V0 features.record-counters off
 
-- 
1.7.1

