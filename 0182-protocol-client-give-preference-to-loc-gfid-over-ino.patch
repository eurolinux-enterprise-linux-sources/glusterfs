From 198d1f8b2026e7e54818a7539618b03f699a8cdd Mon Sep 17 00:00:00 2001
From: Ravishankar N <ravishankar@redhat.com>
Date: Tue, 13 Oct 2015 17:43:58 +0530
Subject: [PATCH 182/191] protocol/client: give preference to loc->gfid over inode->gfid

Patch in master:http://review.gluster.org/#/c/12233/
Patch in release-3.7:http://review.gluster.org/#/c/12234/

There are xlators which perform fops even before inode gets linked.
Because of this loc.gfid is preferred at the time of inodelk/entrylk but by the
time unlock can happen, inode could be linked with a different gfid than the
one in loc.gfid (because of the way dht was giving preference) Due to this
unlock goes on a different inode than the one we sent inodelk on, which leads to
hang.

Credits to Pranith for the fix.
Signed-off-by: Ravishankar N <ravishankar@redhat.com>

Change-Id: I0d806a811f633a18877da3cc6850deccf59ce866
BUG: 1262680
Reviewed-on: https://code.engineering.redhat.com/gerrit/63798
Reviewed-by: Ravishankar Narayanankutty <ravishankar@redhat.com>
Tested-by: Ravishankar Narayanankutty <ravishankar@redhat.com>
---
 xlators/protocol/client/src/client-rpc-fops.c |   12 ++++++------
 1 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/xlators/protocol/client/src/client-rpc-fops.c b/xlators/protocol/client/src/client-rpc-fops.c
index d87ddc9..ece23c9 100644
--- a/xlators/protocol/client/src/client-rpc-fops.c
+++ b/xlators/protocol/client/src/client-rpc-fops.c
@@ -5544,10 +5544,10 @@ client3_3_inodelk (call_frame_t *frame, xlator_t *this,
         if (!(args->loc && args->loc->inode))
                 goto unwind;
 
-        if (!gf_uuid_is_null (args->loc->inode->gfid))
-                memcpy (req.gfid,  args->loc->inode->gfid, 16);
+        if (!gf_uuid_is_null (args->loc->gfid))
+                memcpy (req.gfid,  args->loc->gfid, 16);
         else
-                memcpy (req.gfid, args->loc->gfid, 16);
+                memcpy (req.gfid, args->loc->inode->gfid, 16);
 
         GF_ASSERT_AND_GOTO_WITH_ERROR (this->name,
                                        !gf_uuid_is_null (*((uuid_t*)req.gfid)),
@@ -5707,10 +5707,10 @@ client3_3_entrylk (call_frame_t *frame, xlator_t *this,
         if (!(args->loc && args->loc->inode))
                 goto unwind;
 
-        if (!gf_uuid_is_null (args->loc->inode->gfid))
-                memcpy (req.gfid,  args->loc->inode->gfid, 16);
+        if (!gf_uuid_is_null (args->loc->gfid))
+                memcpy (req.gfid,  args->loc->gfid, 16);
         else
-                memcpy (req.gfid, args->loc->gfid, 16);
+                memcpy (req.gfid, args->loc->inode->gfid, 16);
 
         GF_ASSERT_AND_GOTO_WITH_ERROR (this->name,
                                        !gf_uuid_is_null (*((uuid_t*)req.gfid)),
-- 
1.7.1

